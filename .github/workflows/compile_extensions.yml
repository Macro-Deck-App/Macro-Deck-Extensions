name: Compile Extensions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3.3.0
    - name: Init Submodules
      run: git submodule update --init --recursive
    - id: matrix
      run: git submodule --quiet foreach 'echo `git remote get-url origin | sed "s/https:\/\/github\.com\///" | sed "s/\.git//"` $sha1' | awk 'NR > 1 {printf(",")} {printf("{\"repository\":\"%s\",\"ref\":\"%s\"}", $1, $2)}' | cat <(echo -n "value=[") - <(echo -n "]") >> $GITHUB_OUTPUT
    - name: Check matrix value
      run: echo "${{ steps.matrix.outputs.value }}"

  build:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}
        
    steps:
    - name: Build Extension
      id: build_extension
      continue-on-error: true
      uses: RecklessBoon/Macro-Deck-Extension-Build-Action@main
      with:
        upsert-release: false
        ext-repo: ${{ matrix.value.repository }}
        ext-ref: ${{ matrix.value.ref }}
  
    - name: Check if new
      id: check-if-new
      run:  |
        http_code=$(curl -X 'GET' --silent --output /dev/null --write-out '%{http_code}' 'https://extensionstore.api.macro-deck.app/Extensions/RecklessBoon.MacroDeck.Discord')
        is_new=0
        if [ $(($http_code)) -eq 200 ]; then
          is_new=1
        fi
        echo "is_new=$is_new" >> $GITHUB_OUTPUT
        
    - name: Create new Extension
      if: steps.check-if-new.outputs.is_new == '1'
      run: echo "Need to create the extension"
      
